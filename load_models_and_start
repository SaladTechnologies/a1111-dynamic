#! /usr/bin/env bash
set -e

# This script is executed by the Dockerfile entrypoint. It looks for these environment variables,
# and if they are set, it will use them to download a model from Civit.ai or Huggingface respectively,
# and then run the model server.
# CIVITAI_MODEL_VERSION_ID: abc
# LOAD_REFINER: 1 | 0

# Ensure that --data-dir is set
if [ -z $DATA_DIR ]; then
  echo "Must specify data directory for application state"
  exit 1
fi

LOAD_ONLY=${LOAD_ONLY:-0}

base_path=$(dirname "$DATADIR")

sd_model_path=$DATA_DIR/models/Stable-diffusion/
vae_path=$DATA_DIR/models/VAE/
extension_path=$DATA_DIR/config/auto/extensions/
controlnet_model_path="${extension_path}sd-webui-controlnet/models/"
lora_model_path=$DATA_DIR/models/Lora/

manifest=$(./configure \
  --ckpt-path $sd_model_path \
  --vae-path $vae_path \
  --extension-path $extension_path \
  --controlnet-model-path $controlnet_model_path \
  --lora-path $lora_model_path)

# manifest is a json blob. if manifest.models.controlnet (an array) has length > 0, we need to install the controlnet extension
controlnet=$(echo $manifest | jq -r '.models.controlnet')
if [ "$controlnet" != "[]" ]; then
  extensions=$(echo $manifest | jq -r '.extensions')
  # if extensions doesn't include sd-webui-controlnet, we need to install it
  if [[ $extensions != *"sd-webui-controlnet"* ]]; then
    echo "Controlnet Models found, but no controlnet extension. Installing controlnet extension."
    ./configure \
      --ckpt-path $sd_model_path \
      --vae-path $vae_path \
      --extension-path $extension_path \
      --controlnet-model-path $controlnet_model_path \
      --lora-path $lora_model_path \
      --extension-urls https://github.com/Mikubill/sd-webui-controlnet
  fi
fi

if [ "$LOAD_ONLY" == "1" ]; then
  echo "Exiting after loading models"
  exit 0
fi

/docker/entrypoint.sh "$@"
